/*! ui-grid - v2.0.7-g5bb2d07 - 2014-08-11
* Copyright (c) 2014 ; License: MIT */

.ui-grid-render-container {
  position: relative;
  // overflow: hidden;

  .border-radius(0, @gridBorderRadius, @gridBorderRadius, 0);
}

.ui-grid-scrollbar-box {
  position: static;
}

.ui-grid-viewport {
  // overflow: auto; // TODO(c0bra): turn back on when virtual repeater is hooked up
  min-height: 20px;
  position: relative;
  overflow: hidden;

  :focus {
    outline: none;
  }
}

.ui-grid-canvas {
  position: relative;
}

.ui-grid-row {
  //position: absolute;
  // border-bottom: 1px solid @borderColor;

  &:nth-child(odd) .ui-grid-cell {
    background-color: @rowColorOdd; //rgb(253, 253, 253);
  }

  &:nth-child(even) .ui-grid-cell {
    background-color: @rowColorEven;
  }

  &:last-child .ui-grid-cell {
    border-bottom-color: @borderColor;
    border-bottom-style: solid;

  }
}

.ui-grid-no-row-overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 10%;

  .ui-grid-top-panel-background;
  .border-radius(@gridBorderRadius);
  border: @gridBorderWidth solid @borderColor;

  font-size: 2em;
  text-align: center;

  > * {
    position: absolute;
    display: table;
    margin: auto 0;
    width: 100%;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    opacity: 0.66;
  }
}
.ui-grid-cell {
  overflow: hidden;
  // position: absolute;
  // position: relative; // NOTE: removing so border is visible
  float: left;
  background-color: inherit;
  border-right: @gridBorderWidth solid;
  border-color: @borderColor;
  box-sizing: border-box;

  &:last-child {
    border-right: 0;
  }
}

.ui-grid-cell-contents {
  padding: 5px;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  white-space: nowrap;
  -ms-text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  overflow: hidden;
  height: 100%;
  // width: 100%;
}

.ui-grid-cell-contents-hidden {
  visibility: hidden;
  width: 0;
  height:0;
  display: none;
}


.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
  background: @color;
  background: -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, @start),
                               color-stop(1, @stop));
  background: -ms-linear-gradient(bottom,
                                  @start,
                                  @stop);
  background: -moz-linear-gradient(center bottom,
                                   @start 0%,
                                   @stop 100%);
  background: -o-linear-gradient(@stop,
                                 @start);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}
.bw-gradient(@color: #F5F5F5, @start: 0, @stop: 255) {
  background: @color;
  background: -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, rgb(@start,@start,@start)),
                               color-stop(1, rgb(@stop,@stop,@stop)));
  background: -ms-linear-gradient(bottom,
                                  rgb(@start,@start,@start) 0%,
                                  rgb(@stop,@stop,@stop) 100%);
  background: -moz-linear-gradient(center bottom,
                                   rgb(@start,@start,@start) 0%,
                                   rgb(@stop,@stop,@stop) 100%);
  background: -o-linear-gradient(rgb(@stop,@stop,@stop),
                                 rgb(@start,@start,@start));
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",rgb(@stop,@stop,@stop),rgb(@start,@start,@start)));
}
.bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
  border-top: solid 1px @top-color;
  border-left: solid 1px @left-color;
  border-right: solid 1px @right-color;
  border-bottom: solid 1px @bottom-color;
}
.drop-shadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
  -webkit-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}
.rounded(@radius: 2px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}
.border-radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;
  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;
  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  .background-clip(padding-box);
}
.opacity(@opacity: 0.5) {
  -moz-opacity: @opacity;
  -khtml-opacity: @opacity;
  -webkit-opacity: @opacity;
  opacity: @opacity;
  @opperc: @opacity * 100;
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  filter: ~"alpha(opacity=@{opperc})";
}
.transition-duration(@duration: 0.2s) {
  -moz-transition-duration: @duration;
  -webkit-transition-duration: @duration;
  -o-transition-duration: @duration;
  transition-duration: @duration;
}
.transform(...) {
  -webkit-transform: @arguments;
  -moz-transform: @arguments;
  -o-transform: @arguments;
  -ms-transform: @arguments;
  transform: @arguments;
}
.rotation(@deg:5deg){
  .transform(rotate(@deg));
}
.scale(@ratio:1.5){
  .transform(scale(@ratio));
}
.transition(@type:all, @duration:0.2s, @ease:ease-out) {
  -webkit-transition: @type @duration @ease;
  -moz-transition: @type @duration @ease;
  -o-transition: @type @duration @ease;
  transition: @type @duration @ease;
}
.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4) {
  -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}
.box-shadow(@arguments) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}
.box-sizing(@sizing: border-box) {
  -ms-box-sizing: @sizing;
  -moz-box-sizing: @sizing;
  -webkit-box-sizing: @sizing;
  box-sizing: @sizing;
}
.user-select(@argument: none) {
  -webkit-user-select: @argument;
  -moz-user-select: @argument;
  -ms-user-select: @argument;
  user-select: @argument;
}
.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
  -moz-column-width: @colwidth;
  -moz-column-count: @colcount;
  -moz-column-gap: @colgap;
  -moz-column-rule-color: @columnRuleColor;
  -moz-column-rule-style: @columnRuleStyle;
  -moz-column-rule-width: @columnRuleWidth;
  -webkit-column-width: @colwidth;
  -webkit-column-count: @colcount;
  -webkit-column-gap: @colgap;
  -webkit-column-rule-color: @columnRuleColor;
  -webkit-column-rule-style: @columnRuleStyle;
  -webkit-column-rule-width: @columnRuleWidth;
  column-width: @colwidth;
  column-count: @colcount;
  column-gap: @colgap;
  column-rule-color: @columnRuleColor;
  column-rule-style: @columnRuleStyle;
  column-rule-width: @columnRuleWidth;
}
.translate(@x:0, @y:0) {
  .transform(translate(@x, @y));
}
.background-clip(@argument: padding-box) {
  -moz-background-clip: @argument;
  -webkit-background-clip: @argument;
  background-clip: @argument;
}


@topPanelRadius: @gridBorderRadius - @gridBorderWidth;

.ui-grid-group-panel {
  .gradient(@headerBackgroundColor, @headerGradientStart, @headerGradientStop);
  border-bottom: 1px solid @borderColor; // #D4D4D4
  .border-radius(@topPanelRadius, 0, 0, @topPanelRadius);
  min-height: 30px;
}
  .ui-grid-group-panel .hidden {
    display: none;
  }
  .ui-grid-group-panel .description {
    margin-top: 5px;
    margin-left: 5px;
  }

.ui-grid-group-list {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.ui-grid {
  border: @gridBorderWidth solid @borderColor;

  .rounded(@gridBorderRadius);

  .transform(translateZ(0));

}

.ui-grid-vertical-bar {
  position: absolute;
  right: 0;
  width: 0;
}

.ui-grid-header-cell:not(:last-child) .ui-grid-vertical-bar, .ui-grid-cell:not(:last-child) .ui-grid-vertical-bar {
  width: @gridBorderWidth;
}

.ui-grid-header-cell:not(:last-child) .ui-grid-vertical-bar {
  background-color: @headerVerticalBarColor;
}

.ui-grid-cell:not(:last-child) .ui-grid-vertical-bar {
  background-color: @verticalBarColor;
}

.ui-grid-header-cell:last-child .ui-grid-vertical-bar {
  right: -1px; // TODO(c0bra): Should this be grid width? Test column resizing with custom grid border width
  width: @gridBorderWidth;
  background-color: @headerVerticalBarColor;
}

// .ui-grid-vertical-bar-visible {
//   width: 1px;
//   background-color: @borderColor;
// }

.ui-grid-clearfix {
  &:before, &:after {
    content: "";
    display: table;
  }

  &:after {
    clear:both;
  }
}

.ui-grid-invisible {
  visibility: hidden;;
}

.ui-grid-top-panel-background {
  .gradient(@headerBackgroundColor, @headerGradientStart, @headerGradientStop);  
}

@topPanelRadius: @gridBorderRadius - @gridBorderWidth;
.ui-grid-top-panel {
    position: relative;
    // z-index: 1;
    // background-color: @darkGray; // #EAEAEA
    border-bottom: 1px solid @borderColor; // #D4D4D4

    overflow: hidden;  // Disable so menus show up
    font-weight: bold;

    // .gradient(@headerBackgroundColor, @headerGradientStart, @headerGradientStop);  
    .ui-grid-top-panel-background;

    .border-radius(@topPanelRadius, 0, 0, @topPanelRadius);
}

.ui-grid-group-panel {
  .gradient(@headerBackgroundColor, @headerGradientStart, @headerGradientStop);
  border-bottom: 1px solid @borderColor; // #D4D4D4
  .border-radius(@topPanelRadius, 0, 0, @topPanelRadius);
  min-height: 30px;
}
  .ui-grid-header-group-panel .hidden {
      display: none;
  }

.ui-grid-header-viewport {
  overflow: hidden; // Disable so menus show up
}

.ui-grid-header-canvas {
  position: relative;

  // Clearfix for floating header cells
  &:before, &:after {
    content: "";
    display: table;
    line-height: 0;
  }

  &:after {
    clear:both;
  }

  // .border-radius(@gridBorderRadius, 0, 0, @gridBorderRadius);
}

.ui-grid-header-cell {
  position: relative;
  float: left;
  top: 0;
  bottom: 0;
  background-color: inherit;

  .user-select(none);

  // Default to width 0 so header height can calculate right. Otherwise
  //  the header cells will flow onto the next line of the header container
  //  and cause the header height to be calculated as twice the height
  //  it should be. The column widths are calculated dynamically
  width: 0;

  &.sortable {
    cursor: pointer;
  }
}

// Make vertical bar in header row fill the height of the cell completely
.ui-grid-header .ui-grid-vertical-bar {
  top: 0;
  bottom: 0;
}

.ui-grid-column-menu-button {
  position: absolute;
  right: @gridBorderWidth; // So it doesn't overlay the vertical bar
  top: 0;
  // bottom: 0;
  // .ui-grid-top-panel-background;

  .ui-grid-icon-angle-down {
    vertical-align: sub;
  }
}

.ui-grid-column-menu {
  position: absolute;
}

/* Slide up/down animations */
.ui-grid-column-menu .ui-grid-menu .ui-grid-menu-inner {
  &.ng-hide-add, &.ng-hide-remove {
    .transition(all, 0.05s, linear);
    display: block !important;
  }
  
  &.ng-hide-add.ng-hide-add-active,
  &.ng-hide-remove {
    .transform(translateY(-100%));
  }
   
  &.ng-hide-add,
  &.ng-hide-remove.ng-hide-remove-active {
    .transform(translateY(0));
  }
}

// NOTE: not used currently (TODO(c0bra): Remove or use down the road?)
// .ui-grid-column-filter {
//   display: table;

//   .input-container {
//     position: relative;
//     display: table-cell;

//     .column-filter-input {
//       margin: 0;
//     }

//     .column-filter-cancel-icon-container {
//       position: absolute;
//       top: 0;
//       bottom: 0;
//       right: 0;

//       .column-filter-cancel-icon {
//         position: absolute;
//         top: 50%;
//         line-height: 32px;
//         margin-top: -16px;
//         right: 2px;
//       }
//     }
//   }

//   .button-container {
//     display: table-cell;

//     .ui-grid-button {
//       margin-left: 4px;
//     }
//   }
// }

.ui-grid-filter-container {
  padding: 4px 10px;
  position: relative;

  .ui-grid-filter-button {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;

    [class^="ui-grid-icon"].right {
      position: absolute;
      top: 50%;
      line-height: 32px;
      margin-top: -16px;
      right: 10px;
      opacity: 0.66;

      &:hover {
        opacity: 1;
      }
    }
  }
}

input[type="text"].ui-grid-filter-input {
  padding: 0;
  margin: 0;
  border: 0;
  width: 100%;

  border: @gridBorderWidth solid  @borderColor;
  .border-radius(@gridBorderRadius);

  &:hover {
    border: @gridBorderWidth solid  @borderColor;
  }
}
@font-face {
  font-family: 'ui-grid';
  src: url('ui-grid.eot');
  src: url('ui-grid.eot#iefix') format('embedded-opentype'),
       url('ui-grid.woff') format('woff'),
       url('ui-grid.ttf?') format('truetype'),
       url('ui-grid.svg?#ui-grid') format('svg');
  font-weight: normal;
  font-style: normal;
}
/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'ui-grid';
    src: url('../font/ui-grid.svg?12312827#ui-grid') format('svg');
  }
}
*/
 
 [class^="ui-grid-icon"]:before, [class*=" ui-grid-icon"]:before {
  font-family: "ui-grid";
  font-style: normal;
  font-weight: normal;
  speak: none;
 
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
 
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
     
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
 
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
 
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
 
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}

.ui-grid-icon-blank::before {
  width: 1em;
  content: ' ';
}














.ui-grid-menu {
  z-index: 2; // So it shows up over grid canvas
  position: absolute;
  overflow: hidden;
  padding: 0 10px 20px 10px;
  cursor: default; // Parent element can have pointer cursor
}

.ui-grid-menu .ui-grid-menu-inner {
  background: @headerBackgroundColor;
  border: @gridBorderWidth solid @borderColor;
  position: relative;
  white-space: nowrap;

  .rounded(@gridBorderRadius);
  .box-shadow(e("0 10px 20px rgba(0, 0, 0, 0.2), inset 0 12px 12px -14px rgba(0, 0, 0, 0.2)"));
}

.ui-grid-menu .ui-grid-menu-inner ul {
  margin: 0;
  padding: 0;
  list-style-type: none;

  li {
    padding: 8px;
    cursor: pointer;

    // Show a shadow when hovering over a menu item
    &:hover {
      // background-color: negation(@headerBackgroundColor, #fff);
      .inner-shadow(@vertical: 0, @blur: 14px, @alpha: 0.2);
    }

    &.ui-grid-menu-item-active {
      .inner-shadow(@vertical: 0, @blur: 14px, @alpha: 0.2);
      background-color: @selectedColor;
    }
  }

  // Show a bottom border on all but the last menu item
  li:not(:last-child) {
    border-bottom: @gridBorderWidth solid @borderColor;
  }
}

.ui-grid-native-scrollbar {
  position: absolute;
  overflow: scroll;

  &.vertical {
    top: 0;
    right: 0;
    height: 100%;
    overflow-x: hidden;

    // Default width, will update in code
    width: 17px;
  }

  &.horizontal {
    bottom: 0;
    left: 0;
    width: 100%;
    overflow-y: hidden;

    // Default height, will update in code
    height: 17px;
  }
}
.ui-grid[dir=rtl] .ui-grid-header-cell,
.ui-grid[dir=rtl] .ui-grid-cell {
  float: right !important;
}

// .ui-grid[dir=rtl] .ui-grid-scrollbar-vertical {
//   right: inherit;
//   left: 4px;
// }

.ui-grid[dir=rtl] .ui-grid-scrollbar-horizontal {
  left: inherit;
  right: 0;
}

.ui-grid[dir=rtl] .ui-grid-native-scrollbar.vertical
{
    left: 0px;
    right: inherit;
}

.grid[dir=rtl] .ui-grid-column-menu-button {
  position: absolute;
  left: 1px;
  top: 0;
  right: inherit;
}

.ui-grid[dir=rtl] .ui-grid-cell:first-child,
.ui-grid[dir=rtl] .ui-grid-header-cell:first-child {
  border-right: 0;
}

.ui-grid[dir=rtl] .ui-grid-cell:last-child {
  border-right: @gridBorderWidth solid;
  border-color: @borderColor;
}

.ui-grid-header-cell:first-child .ui-grid-vertical-bar,
.ui-grid-cell:first-child .ui-grid-vertical-bar {
  width: 0;
}
.ui-grid-scrollbar {
  z-index: 10;
  position: absolute;
  .opacity(0);
  .transition(opacity, 0.25s, ease-out);

  background: @scrollbarBackground;

  cursor: pointer;
  // transform: translateZ(0);

  border: @scrollbarBorder;
  .rounded(@scrollbarBorderRadius);
  .box-shadow(@scrollbarShadow);
  // .transition(all, 300ms, linear);

  &-vertical {
    width: @scrollbarWidth;
    margin-top: 4px;
    margin-bottom: 4px;
    right: 4px;
    top: 0
    // right: @scrollbarWidth;
    // .transition();
  }

  &-horizontal {
    height: @scrollbarWidth;
    margin-right: 4px;
    margin-left: 4px;
    bottom: 4px;
    left: 0px;
    width: 45px;
  }

  &-visible {
    .opacity(1);
    // -webkit-transition: opacity 0.5s ease-out;
    // -moz-transition: opacity 0.5s ease-out;
    // -o-transition: opacity 0.5s ease-out;
    // transition: opacity 0.5s ease-out;
  }

  // &-vertical.in {
  //   .transition(all);
  //   right: 4px;
  // }
}

.ui-grid-scrollbar:hover {
  background: @scrollbarBackgroundHover;
}

.ui-grid-scrollbar.ui-grid-scrolling {
  display: block;
  background: @scrollbarBackgroundScrolling;
  border: @scrollbarBorderScrolling;
}
// .ui-grid-sortarrow {
//   fill: @sortArrowBackgroundColor; 
//   stroke: @sortArrowBorderColor; 
//   stroke-linejoin:miter;
// }

// .ui-grid-sortarrow.down {
//   -webkit-transform: rotate(180deg);
//   -moz-transform: rotate(180deg);
//   -ms-transform: rotate(180deg);
//   -o-transform: rotate(180deg);
//   transform: rotate(180deg); 
// }


@sortArrowWidth: 20px;

.ui-grid-sortarrow {
  right: 5px;
  position: absolute;
  width: @sortArrowWidth;
  top: 0;
  bottom: 0;
  background-position: center;

  &.down {
    .transform(rotate(180deg));
  }
}
/*-- VARIABLES (DO NOT REMOVE THESE COMMENTS) --*/

/**
* @section Grid styles
*/
@gridBorderWidth: 1px;
@gridBorderRadius: 0px;
@borderColor: #d4d4d4;


/**
* @section Header styles
*/

/** @description Colors for header gradient */
@headerBackgroundColor: #f3f3f3;
@headerGradientStart: #eee;
@headerGradientStop: #fff;
@headerVerticalBarColor: @borderColor;

/**
* @section Grid body styles
*/

/** @description Colors used for row alternation */
@verticalBarColor: @borderColor;
@rowColorEven: #f3f3f3;
@rowColorOdd: #fdfdfd;

// TODO: colors for buttons

/**
* @section Sort arrow colors
*/

@sortArrowBackgroundColor: #aaaaaa;
@sortArrowBorderColor: #777777;


// TODO: color for menu background

@rowSelected: #C9DDE1;

// TODO: color for cell selections
@focusedCell: #b3c4c7;

// Color to use for enabled or selected settings/items/cells, etc. Should probably override the one above
@selectedColor: #cecece;

/**
* @section Scrollbar styles
*/
@scrollbarBackground: darken(@rowColorEven, 15%);
@scrollbarBackgroundHover: darken(@scrollbarBackground, 15%);
@scrollbarBackgroundScrolling: darken(@scrollbarBackgroundHover, 15%);
@scrollbarWidth: 10px;
@scrollbarBorderRadius: 2px;
@scrollbarShadow: 0 0 0px #fff;
@scrollbarBorder: 1px solid darken(@scrollbarBackground, 15%);
@scrollbarBorderScrolling: 1px solid darken(@scrollbarBackgroundScrolling, 15%);

/*-- END VARIABLES (DO NOT REMOVE THESE COMMENTS) --*/